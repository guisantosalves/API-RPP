openapi: 3.0.3
info:
  title: API do repositório de políticas públicas
  description: api para controlar a logica de negócio do site
  version: 0.0.1
  termsOfService: http://localhost:3030
  contact:
    name: developer
    email: workguisantos@gmail.com
  license:
    name: "MIT"
servers:
  # Pode ter quantos servidores forem necessário (Produção + Teste)
  - url: http://localhost:3030
    description: API de teste

tags:
  - name: Usuários
    description: Usuários do Observatório de Políticas Públicas
    externalDocs:
      description: Leia mais 
      url: http://swagger.io
  - name: Publicações
    description: Publicações da plataforma
    externalDocs:
      description: Leia mais 
      url: http://swagger.io

paths:
  #Rotas para usuário
  /usuarios:
    get:
      tags:
        - Usuários
      summary: Recupera todos os usuários
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuarios'
                
        '404':
          description: Nenhum usuário encontrado
          content:
            application/json:
              example: Not Found
    post:
      tags:
        - Usuários
      summary: Cadastra um novo usuário
      requestBody: 
        content: 
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                descricao:
                  type: string
      responses: 
        '201':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuarios'
        '404':
          description: Sem acesso ao banco
          content:
            application/json:
              example: Not Found
        '409':
          description: Usuáriio já existente
          content:
            application/json:
              example: Conflict
              
  /usuarios/{id}:
    parameters:
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    get:
      tags:
        - Usuários
      summary: Recupera usuário por ID
      responses:
        '200':
          description: Sucesso
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/usuario'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              example: Not Found
  
    put:
      tags:
        - Usuários
      summary: Atualiza um usuário pelo ID
      requestBody:
        description: Atualiza um usuário pelo ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/usuario'
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/usuario'
                
        '404':
          description: Nenhum usuário encontrado
          content:
            application/json:
              example: Not Found
    delete:
      tags:
        - Usuários
      summary: Apaga um usuário pelo ID
      responses:
        '200':
          description: Sucesso
          content:
            application/json:
              example: Deleted
                
        '404':
          description: Nenhum usuário encontrado
          content:
            application/json:
              example: Not Found

  #Rotas para login
  /login:
    get:
      summary: recupera todos os logins
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/logins"
  /login/{id}:
    # O parâmentro nessa área permitirá utilizá-lo para todos os verbos nesta rota
    parameters:
      - name: id
        in: path
        schema:
          type: integer
        required: true

    get:
      summary: recupera um login por ID
      # Lugar possível de colocar o parametro, mas servirá apenas para o verbo get
      responses:
        200:
          description: Sucesso
          content:
            application/json:
              schema:
                # usando por conponente
                $ref: "#/components/schemas/login"
        404:
          description: login não encontrado
          content:
            application/json:
              example: "Not Found"
    post:
      summary: cria um novo login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                senha:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            application/json:
              schema:
                # usando por conponente
                $ref: "#/components/schemas/login"
        404:
          description: login não encontrado
          content:
            application/json:
              example: "Not Found"
    put:
      summary: update de um login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                senha:
                  type: string
      responses:
        201:
          description: "Sucesso"
          content:
            application/json:
              schema:
                # usando por conponente
                $ref: "#/components/schemas/login"
        404:
          description: login não encontrado
          content:
            application/json:
              example: "Not Found"
    delete:
      summary: delete de um login
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              example: Success
        404:
          description: login não encontrado
          content:
            application/json:
              example: "Not Found"
              
  #Rotas para publicações
  /publicacoes:
    get:
      tags:
        - Publicações
      summary: Recupera todas as publicações
      responses:
        200:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicacoes"
        404:
          description: "Não foi possível acessar o banco de dados"
          content:
            application/json:
              example: "Connection Error"
    
    post:
      tags:
        - Publicações
      summary: Cadastra uma nova publicação
      requestBody: 
        content: 
          application/json:
            schema:
              $ref: "#/components/schemas/publicacao_put"

      responses:
        201:
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/publicacao"

        404:
          description: "Não foi possível inserir a publicação"
          content:
            application/json:
              example: Not Found
              
        409:
          description: "Publicação existente"
          content: 
            application/json:
              example: Conflict

  /publicacoes/{id}:
    parameters:
      - name: id
        in: path
        schema: 
          type: integer
        required: true
    get:
      tags:
        - Publicações
      summary: Recupera publicação por ID
      responses:
        '200':
          description: "Sucesso"
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/publicacao'
        '404':
          description: "Publicação não encontrada"
          content:
            application/json:
              example: Not Found
    
    put:
      tags:
        - Publicações
      summary: Atualiza publicacao pelo ID

      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publicacao_put'

      responses:
        '200':
          description: "Sucesso"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicacao'
                
        '204':
          description: "Sem alteração"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publicacao'
                
        '404':
          description: "Publicação não encontrada"
          content:
            application/json:
              example: Not Found
              
    delete:
      tags:
        - Publicações
      summary: Apaga publicação por ID
      responses:
        '200':
          description: "Sucesso"
          content:
            application/json: 
              example: Deleted
        '404':
          description: "Publicação não encontrada"
          content:
            application/json:
              example: Not Found

security:
  - auth: []

components:
  schemas:
    #Elementos para usuário
    usuario:
      type: object
      properties:
        id:
          type: integer
        nome_usuario:
          type: string
        senha:
          type: string
        formacao:
          type: string
        nome:
          type: string
        inativo:
          type: boolean
        adm:
          type: boolean
        path_photo:
          type: string
    usuarios:
      type: array
      
      items: 
        $ref: '#/components/schemas/usuario'

    #Elementos para login
    login:
      type: object
      properties:
        id:
          type: integer
        login:
          type: string
        senha:
          type: string
        ativo:
          type: boolean
          # Lembrando que string pode ter outros formatos Ex. (format: date-time; format: currency)
    logins:
      type: array
      items:
        $ref: "#/components/schemas/login"

    #Elementos para publicações
    publicacao:
      type: object
      properties:
        id:
          type: integer
        data:
          type: string
        titulo:
          type: string
        registro:
          type: string
        tipo:
          type: string
        usuarioId:
          type: integer

    publicacao_put:
      type: object
      properties:
        data:
          type: string
        titulo:
          type: string
        registro:
          type: string
        tipo:
          type: string
        usuarioId:
          type: integer

    publicacoes:
      type: array
      items:
        $ref: "#/components/schemas/publicacao"

  securitySchemes:
    auth:
      type: http
      # tipo Token do portador
      scheme: bearer
      bearerFormat: JWT
